<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">
	<!-- 默认以settings.xml为全局配置文件 -->
	<context:property-placeholder location="classpath:settings.xml"
		ignore-resource-not-found="true" />
	<!-- 定义数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 链接地址、用户名、密码 -->
		<property name="url" value="${db.url:jdbc:h2:mem:coo}" />
		<property name="username" value="${db.username:su}" />
		<property name="password" value="${db.password:}" />

		<!-- 初始、最大、最小连接数 -->
		<property name="initialSize" value="${db.initialSize:10}" />
		<property name="maxActive" value="${db.maxActive:100}" />
		<property name="minIdle" value="${db.minIdle:10}" />

		<!-- 获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.maxWait:60000}" />
		<!-- 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis:60000}" />
		<!-- 连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis:300000}" />

		<property name="validationQuery" value="${db.validationQuery:SELECT 'x'}" />
		<property name="testWhileIdle" value="${db.testWhileIdle:true}" />
		<property name="testOnBorrow" value="${db.testOnBorrow:true}" />
		<property name="testOnReturn" value="${db.testOnReturn:false}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${db.poolPreparedStatements:false}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${db.maxPoolPreparedStatementPerConnectionSize:0}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${db.filters:slf4j}" />

		<!-- 启用自动关闭长时间不使用连接的功能（怀疑存在连接泄漏时启用） -->
		<property name="removeAbandoned" value="${db.removeAbandoned:false}" />
		<!-- 自动关闭超过1800秒未关闭的连接 -->
		<property name="removeAbandonedTimeout" value="${db.removeAbandonedTimeout:1800}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${db.logAbandoned:true}" />
	</bean>
	<!-- 定义基本的Hibernate SessionFactory，供继承。 -->
	<bean id="sessionFactory" class="coo.core.hibernate.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 数据库适配器 -->
				<prop key="hibernate.dialect">${db.dialect:org.hibernate.dialect.H2Dialect}</prop>
				<!-- 是否在控制台打印SQL语句 -->
				<prop key="hibernate.show_sql">${db.show_sql:false}</prop>
				<!-- 二级缓存设置 -->
				<prop key="hibernate.cache.use_query_cache">${db.cache.use_query_cache:false}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${db.cache.use_second_level_cache:true}</prop>
				<prop key="hibernate.cache.region.factory_class">
					${db.cache.region.factory_class:org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory}
				</prop>
				<prop key="hibernate.jdbc.fetch_size">${db.jdbc.fetch_size:50}</prop>
				<prop key="hibernate.jdbc.batch_size">${db.jdbc.batch_size:25}</prop>
				<!-- 全文索引设置 -->
				<prop key="hibernate.search.default.exclusive_index_use">${search.exclusive_index_use:false}</prop>
				<prop key="hibernate.search.default.directory_provider">${search.directory_provider:filesystem}</prop>
				<prop key="hibernate.search.infinispan.configuration_resourcename">${search.infinispan.xml:infinispan.xml}</prop>
				<prop key="hibernate.search.default.worker.execution">${search.worker.execution:sync}</prop>
				<prop key="hibernate.search.default.worker.backend">${search.default.worker.backend:}</prop>
				<prop key="hibernate.search.default.indexBase">${search.indexBase:${user.home}/.coo/indexed}</prop>
				<prop key="hibernate.search.analyzer">${search.analyzer:org.apache.lucene.analysis.standard.StandardAnalyzer}
				</prop>
			</props>
		</property>
	</bean>
	<!-- 定义事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 设置事务的annotation生效 -->
	<tx:annotation-driven />
	<!-- 启动Spring AOP -->
	<aop:aspectj-autoproxy />
	<!-- 设置定时器的annotation生效 -->
	<task:annotation-driven />
	<!-- 定义默认异步任务组件 -->
	<task:executor id="taskExecutor" pool-size="5-1000"
		queue-capacity="3000" />
	<!-- 加载coo.core下的组件 -->
	<context:component-scan base-package="coo.core" />
</beans>