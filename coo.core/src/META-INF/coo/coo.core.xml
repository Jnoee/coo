<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 默认以settings.xml为全局配置文件 -->
	<context:property-placeholder location="classpath:settings.xml"	ignore-resource-not-found="true" />
	<!-- 定义数据源 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="${db.driver:org.h2.Driver}" />
		<property name="url" value="${db.url:jdbc:h2:mem:coo}" />
		<property name="username" value="${db.username:su}" />
		<property name="password" value="${db.password:}" />
		<property name="maxActive" value="${db.maxActive:100}" />
		<property name="maxIdle" value="${db.maxIdle:10}" />
		<property name="maxWait" value="${db.maxWait:10000}" />
		<property name="testWhileIdle" value="${db.testWhileIdle:true}" />
		<property name="validationQuery" value="${db.validationQuery:SELECT 1}" />
		<property name="validationInterval" value="${db.validationInterval:30000}" />
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis:30000}" />
	</bean>
	<!-- 定义基本的Hibernate SessionFactory，供继承。 -->
	<bean id="sessionFactory" class="coo.core.hibernate.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 数据库适配器 -->
				<prop key="hibernate.dialect">${db.dialect:org.hibernate.dialect.H2Dialect}</prop>
				<!-- 是否在控制台打印SQL语句 -->
				<prop key="hibernate.show_sql">${db.show_sql:false}</prop>
				<!-- 二级缓存设置 -->
				<prop key="hibernate.cache.use_query_cache">${db.cache.use_query_cache:false}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${db.cache.use_second_level_cache:true}</prop>
				<prop key="hibernate.cache.region.factory_class">${db.cache.region.factory_class:org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory}</prop>
				<prop key="hibernate.jdbc.fetch_size">${db.jdbc.fetch_size:50}</prop>
				<prop key="hibernate.jdbc.batch_size">${db.jdbc.batch_size:25}</prop>
				<!-- 使用的Lucene版本 -->
				<prop key="hibernate.search.lucene_version">${search.lucene.version:LUCENE_36}</prop>
				<!-- 是否独占式使用索引文件 -->
				<prop key="hibernate.search.default.exclusive_index_use">${search.exclusive_index_use:false}</prop>
				<!-- 全文索引设置 -->
				<prop key="hibernate.search.default.directory_provider">${search.directory_provider:org.hibernate.search.store.impl.FSDirectoryProvider}</prop>
				<!-- 全文索引保存目录 -->
				<prop key="hibernate.search.default.indexBase">${search.indexBase:${user.home}/.coo/indexed}</prop>
				<!-- 全文索引分词器 -->
				<prop key="hibernate.search.analyzer">${search.analyzer:org.apache.lucene.analysis.standard.StandardAnalyzer}</prop>
			</props>
		</property>
	</bean>
	<!-- 定义事务管理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 设置事务的annotation生效 -->
	<tx:annotation-driven />
	<!-- 启动Spring AOP -->
	<aop:aspectj-autoproxy />
	<!-- 加载coo.core下的组件 -->
	<context:component-scan base-package="coo.core" />
</beans>